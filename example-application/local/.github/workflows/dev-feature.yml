permissions:
  id-token: write
  contents: read
name: Build and Load Feature Branch Docker Images
on:
  push:
    branches:
      - "feature/**"
      - "bugfix/**"
jobs:
  version:
    name: Define VERSION âœ¨
    runs-on: self-hosted
    outputs:
      version: ${{ steps.define_version.outputs.VERSION }}
      changelog: ${{ steps.define_version.outputs.CHANGELOG_NEW }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Maintenant, cela obtiendra tous les tags ainsi que les commits

      - name: Define VERSION
        id: define_version
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "build-and-push-images-action@github.com"
          echo "VERSION=$(git describe --tags --abbrev=7 --match 'v*')" >> $GITHUB_ENV
          echo "VERSION=$(git describe --tags --abbrev=7 --match 'v*')" >> $GITHUB_OUTPUT
      - name: Refresh local/.env file
        run: |
          ./dotenv.sh
      - name: Use VERSION
        run: echo "Current version is ${{ env.VERSION }}"
  build:
    needs: version
    name: Build and Push Images
    uses: ./.github/workflows/build-images.yml
    strategy:
      matrix:
        environment: [dev, staging, prod]
    with:
      version: ${{ needs.version.outputs.version }}
      environment: ${{ matrix.environment }}
      use_registry_cache: true
      android_release_keystore_path: example-application/mobile/android/release-key.keystore
      android_release_keystore_base64_path: example-application/mobile/android/release-key.keystore.base64
      android_release_keystore_store_pass_base64_path: example-application/mobile/android/release-key.keystore.storepass.base64
    secrets:
      WORKLOAD_IDENTITY_PROVIDER: projects/${{ secrets.GOOGLE_CLOUD_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ vars.WORKLOAD_IDENTITY_POOL_ID }}/providers/${{ vars.WORKLOAD_IDENTITY_PROVIDER_ID }}
      GOOGLE_CLOUD_SA_KEY_GITHUB_ACTIONS_MAIN: github-actions-main@${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}.iam.gserviceaccount.com
      GOOGLE_CLOUD_PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}
      ANDROID_RELEASE_KEYSTORE: ${{ secrets.ANDROID_RELEASE_KEYSTORE }}
      ANDROID_RELEASE_KEYSTORE_STORE_PASS: ${{ secrets.ANDROID_RELEASE_KEYSTORE_STORE_PASS }}
  test:
    needs:
      - build
      - version
    name: Run Tests
    uses: ./.github/workflows/functional-tests.yml
    strategy:
      matrix:
        environment: [dev, staging, prod]
    with:
      version: ${{ needs.version.outputs.version }}
      environment: ${{ matrix.environment }}
      functional-tests-output-dir: example-application/tests/output
    secrets:
      GOOGLE_CLOUD_PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}
      WORKLOAD_IDENTITY_PROVIDER: projects/${{ secrets.GOOGLE_CLOUD_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ vars.WORKLOAD_IDENTITY_POOL_ID }}/providers/${{ vars.WORKLOAD_IDENTITY_PROVIDER_ID }}
      GOOGLE_CLOUD_SA_KEY_GITHUB_ACTIONS_MAIN: github-actions-main@${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}.iam.gserviceaccount.com
  extract-release-artifacts:
    name: Upload Artifacts APK & AAB ðŸ“¦
    runs-on: self-hosted
    needs: [build, test, version]
    environment: dev
    env:
      VERSION: ${{ needs.build-release-images.outputs.version }}
      VEGITO_PROJECT_USER: gha-${{ github.run_id }}
      LOCAL_ANDROID_MOBILE_IMAGE_APK_RELEASE_EXTRACT_PATH: example-application/mobile/${{ vars.ANDROID_RELEASE_PACKAGE_NAME }}-release-${{ needs.build-release-images.outputs.version }}-signed-aligned.apk
      LOCAL_ANDROID_MOBILE_IMAGE_AAB_RELEASE_EXTRACT_PATH: example-application/mobile/${{ vars.ANDROID_RELEASE_PACKAGE_NAME }}-release-${{ needs.build-release-images.outputs.version }}-signed.aab
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Refresh local/.env file
        run: |
          ./dotenv.sh
      - name: Extract signed APK & AAB releases from images
        id: extract_apk_aab
        run: make local-android-mobile-image-tag-release-extract
      - name: Upload signed APK and AAB ðŸ“¤
        uses: actions/upload-artifact@v4
        with:
          name: android-artifacts-dev
          path: |
            ${{ env.PROJECT_DIR }}/${{ env.LOCAL_ANDROID_MOBILE_IMAGE_APK_RELEASE_EXTRACT_PATH }}
            ${{ env.PROJECT_DIR }}/${{ env.LOCAL_ANDROID_MOBILE_IMAGE_AAB_RELEASE_EXTRACT_PATH }}
  cleanup:
    name: Cleanup docker env ðŸ§¼
    runs-on: self-hosted
    needs: [build, test, version, extract-release-artifacts]
    if: ${{ always() }}
    env:
      VERSION: ${{ needs.build-release-images.outputs.version }}
      VEGITO_PROJECT_USER: gha-${{ github.run_id }}
      GOOGLE_CLOUD_PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}
      GOOGLE_CLOUD_PROJECT_NUMBER: ${{ secrets.GOOGLE_CLOUD_PROJECT_NUMBER }}
      WORKLOAD_IDENTITY_PROVIDER: projects/${{ secrets.GOOGLE_CLOUD_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ vars.WORKLOAD_IDENTITY_POOL_ID }}/providers/${{ vars.WORKLOAD_IDENTITY_PROVIDER_ID }}

    environment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Refresh local/.env file
        run: |
          rm -f .env
          ./dotenv.sh
      - name: Authenticate to Google Cloud via Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: github-actions-main@${{ env.GOOGLE_CLOUD_PROJECT_ID }}.iam.gserviceaccount.com
          project_id: ${{ env.GOOGLE_CLOUD_PROJECT_ID }}
          token_format: "access_token"
          export_environment_variables: true
      - name: Set up Cloud SDK
        run: |
          make gcloud-config-set-project
      - name: Configure Docker for GCR
        run: |
          make gcloud-auth-docker
      - name: Shutdown containers
        run: make dev-ci-rm
      - name: Notify cleanup done
        run: echo "Cleaning completed."
